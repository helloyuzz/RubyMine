@page
@model RubyMine.Pages.Creation.IndexModel
@using RubyMine.Models
@{
    ViewData["showFooter"] = "footer";
}
<style>
    ul, #myUL {
        list-style-type: none;
    }

    #myUL {
        margin: 0;
        padding: 0;
    }

    .caret {
        cursor: pointer;
        -webkit-user-select: none; /* Safari 3.1+ */
        -moz-user-select: none; /* Firefox 2+ */
        -ms-user-select: none; /* IE 10+ */
        user-select: none;
    }

        .caret::before {
            content: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' width='9' height='9' viewBox='0 0 16 16'%3e%3cpath fill='none' stroke='rgba%280,0,0,.5%29' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M5 14l6-6-6-6'/%3e%3c/svg%3e");
            color: black;
            display: inline-block;
            margin-right: 6px;
            transition: transform 0.13s ease;
            transform-origin: .5em 50%;
        }

    .caret-down::before {
        -ms-transform: rotate(90deg); /* IE 9 */
        -webkit-transform: rotate(90deg); /* Safari */
        transform: rotate(90deg);
    }

    .nested {
        display: none;
    }

    .active {
        display: block;
    }
    ul li:hover, ul li:focus {
        background-color: #eff5f8;
        color:#0026ff;
    }
</style>

@functions{
    string BuildTree(int? parent_id) {
        string htmlTree = "";
        if (parent_id == null) {
            htmlTree = "<ul id=\"myUL\" class=\"active\">";
        } else {
            htmlTree = "<ul id=\"ul_" + parent_id + "\" htmlId=\""+ parent_id+"\" class=\"nested active\">";
        }

        var itemCount = Model.Module.Count(t => t.PId == parent_id);
        if (itemCount > 0) {
            int nodeCursor = 1;
            foreach (Module item in Model.Module.Where(t => t.PId == parent_id).OrderBy(t => t.Index)) {
                int subNode = Model.Module.Count(t => t.PId == item.Id);
                var linkContent = "";
                linkContent += "<span class=\"float-end\">";
                if (parent_id != null) {
                    if (nodeCursor > 1) {
                        linkContent += "&nbsp;<a href=\"?action=up&id=" + item.Id + "\" title=\"上移\"><i class=\"bi bi-arrow-up\"></i></a>";
                    }
                    if (nodeCursor < itemCount) {
                        linkContent += "&nbsp;<a href=\"?action=down&id=" + item.Id + "\" title=\"下移\"><i class=\"bi bi-arrow-down\"></i></a>";
                    }
                    linkContent += "&nbsp;<a href=\"/Modules/Delete?id=" + item.Id + "\" title=\"禁用\" target=\"_blank\"><i class=\"bi bi-trash\"></i></a>";
                }
                linkContent += "&nbsp;<a href=\"/Modules/Create?pid=" + item.Id + "\" title=\"新增下级节点\" target=\"_blank\"><i class=\"bi bi-plus-circle\"></i></a>";
                linkContent += "&nbsp;<a href=\"/Modules/Edit?id=" + item.Id + "\" title=\"编辑\" target=\"_blank\"><i class=\"bi bi-pencil float-right\"></i></a>";
                linkContent += "</span>";

                if (subNode > 0) {
                    htmlTree += "<li id=\"li_" + item.Id + "\"><span class=\"caret fs-7\" htmlId=\"" + item.Id + "\"><i class=\"bi bi-folder-check\"></i>&nbsp;" + item.Name + "</span>" + linkContent;

                    htmlTree += "</li>";
                    string tempTree = BuildTree(item.Id);
                    if (string.IsNullOrEmpty(tempTree) == false) {
                        htmlTree += tempTree;
                    }
                } else {
                    htmlTree += "<li><span class=\"fs-7\"><i class=\"bi bi-file-earmark-ppt\"></i>&nbsp;" + item.Name + "</span>" + linkContent + "</li>";
                }
                nodeCursor++;
            }
        }
        htmlTree += "</ul>";
        return htmlTree;
    }
}
<div class="container-fluid border-1 border-ccc fs-7 h-100">
    <div class="row bg-title pt-1 pb-1 border-bottom border-ccc">
        <span class="fw-bold">3.0产品开发管理平台</span>
    </div>
    <div class="row p-1">
        <div class="col-2 border-1 border-ccc p-2 mr-1 pt-2 pb-2">
            @Html.Raw(BuildTree(null))
        </div>
        <div class="col border-1 border-ccc">

        </div>
    </div>
</div>

<script>
    var toggler = document.getElementsByClassName("caret");

    for (var i = 0; i < toggler.length; i++) {
        toggler[i].addEventListener("click", function () {
            $('#ul_' + $(this).attr('htmlId')).toggleClass("active");
            //this.parentElement.querySelector(".nested").classList.toggle("active");
            this.classList.toggle("caret-down");
        });
    }
</script>