@page
@model RubyMine.Pages.Platform.IndexModel
@using RubyMine.Models
@using RubyMine.Customs.Models;
@{
    Layout = "~/Pages/Shared/_NavicatLayout.cshtml";

    string user_id = User.Claims.FirstOrDefault(t => t.Type.Equals("http://schemas.xmlsoap.org/ws/2005/05/identity/claims/nameidentifier")).Value;
    bool showEdit = Model.Admin_Role_id.Contains("-" + user_id + ",");
    string issue_id = Request.Query["issue_id"];
}
<style>
    ul, #module_tree {
        list-style-type: none;
    }

    #module_tree {
        margin: 0;
        padding: 0;
    }

    .caret, caret-issue {
        cursor: pointer;
        -webkit-user-select: none; /* Safari 3.1+ */
        -moz-user-select: none; /* Firefox 2+ */
        -ms-user-select: none; /* IE 10+ */
        user-select: none;
    }

        .caret::before {
            content: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' width='9' height='9' viewBox='0 0 16 16'%3e%3cpath fill='none' stroke='rgba%280,0,0,.5%29' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M5 14l6-6-6-6'/%3e%3c/svg%3e");
            color: black;
            display: inline-block;
            /*margin-right: 6px;*/
            transition: transform 0.13s ease;
            transform-origin: .5em 50%;
        }

    .caret-issue::before {
        content: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' width='9' height='9' viewBox='0 0 16 16'%3e%3cpath fill='none' stroke='rgba%280,0,0,.5%29' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M8 9.5a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3z'/%3e%3c/svg%3e");
        color: black;
        display: inline-block;
    }

    .caret-down::before {
        -ms-transform: rotate(90deg); /* IE 9 */
        -webkit-transform: rotate(90deg); /* Safari */
        transform: rotate(90deg);
    }

    .nested {
        display: none;
    }

    ul, li {
        /*line-height: 160%;*/
        border: 1px solid #fff;
    }

    ul {
        margin-left: 0px;
        padding-left: 0px;
    }

    li {
        margin: 0px !important;
        padding-left: 13px;
    }


    .activeTreeNode {
        display: block;
    }

    span:hover {
        background-color: #cde8ff;
        color: #0026ff;
    }

    span:focus {
        background-color: #cde8ff;
        color: #0026ff;
        border: 1px solid #90c9e3;
    }

    span.active {
        background-color: #cde8ff;
        border: 1px solid #90c9e3;
    }

    .footer {
        bottom: auto !important;
    }

    .op-link {
        color: #adb5c9 !important;
    }

    .module-li {
        padding-left: 19px;
    }

    .node-1 {
        padding-left: 0px;
    }

    tr.active {
        background-color: #ebebeb;
        border: 2px dotted #9a9a9a;
    }

    th, td {
        padding: 0px !important;
    }

        th[htmlValue="issue"] {
            padding: 3px !important;
        }

        td[htmlValue="issue"] {
            border: solid 1px #d7d7d7;
            padding: 2px !important;
        }


    textarea {
        border: 2px inset !important;
    }

    .w-e-text-container {
        height: 100% !important;
    }

        .w-e-text-container p {
            font-size: small !important;
        }

        .w-e-text-container .placeholder {
            display: none !important;
        }

    .nav-tabs .nav-link {
        background: #f0f0f0 !important;
    }

    .w-e-toolbar, .nav-item {
        font-size: 9pt;
    }

    .level-1 {
        display: block !important;
    }
</style>

@functions{
    string BuildTree(int? parent_id, int user_id, int level) {
        string htmlTree = "";
        var ex_true = "d-none";
        if (parent_id == null) {
            htmlTree = "<ul id=\"module_tree\" class=\"jumpNav\">";
        } else {
            htmlTree = "<ul id='ul_" + parent_id + "' htmlId='" + parent_id + "' class='";
            if (level < 3) {
                ex_true = "d-block";
            } else {
                ex_true = "d-none";
            }
            if (GlobalCache.ActiveNodes.FirstOrDefault(t => t.Key == user_id).Value.Contains(parent_id.Value)) {
            }
            htmlTree += ex_true;
            htmlTree += " level-" + level + "'>";
        }

        var itemCount = Model.Modules.Count(t => t.PId == parent_id);
        int showIndex = 1;
        string showIndexTip = "";
        if (itemCount > 0) {
            foreach (Module item in Model.Modules.Where(t => t.PId == parent_id).OrderBy(t => t.Index)) {
                showIndexTip = showIndex++.ToString() + ".";
                if (parent_id == null) {
                    showIndexTip = "";
                }
                int subNode = Model.Modules.Count(t => t.PId == item.Id);
                subNode += Model.Issues.Count(t => t.Module_id == item.Id);
                var active = "";

                if (Model.Module_id == item.Id) {
                    active = " active";
                }

                int pid = -1;
                if (item.PId != null) {
                    pid = item.PId.Value;
                }
                string html_attr = " module-id='" + item.Id + "' module-pid='" + pid + "' module-name='" + item.Name + "' issue-id=''";
                string show_caret = "caret-issue";
                if (subNode > 0) {
                    show_caret = "caret";
                }

                htmlTree += "<li id='module_" + item.Id + "' class='module-li node-" + item.Id + "'>";
                htmlTree += "   <span id='span_" + item.Id + "' class='module " + show_caret + " d-inline-block w-100 text-269" + active + "'" + html_attr + ">";
                htmlTree += "        <img class='w-auto' src='/images/xp/module.png'>&nbsp;<label id='lbl_module_" + item.Id + "' title='模块编号:" + item.Id + "'>" + item.Name + "</label>";
                htmlTree += "   </span>";
                if (subNode > 0) {
                    string tempTree = BuildTree(item.Id, user_id, level + 1);
                    if (string.IsNullOrEmpty(tempTree) == false) {
                        htmlTree += tempTree;
                    }
                }
                htmlTree += BuildIssue(item.Id, level + 1);
                htmlTree += "</li>";
            }
        }
        htmlTree += "</ul>";
        return htmlTree;
    }
    string BuildIssue(int module_id, int level) {
        string temp = "";
        string ul_class = "d-none";
        if (level < 3) {
            ul_class = "d-block";
        }

        var issues = Model.Issues.Where(t => t.Module_id == module_id).OrderBy(t => t.Position);
        if (issues.Count() > 0) {
            temp += "<ul id='ul_issue_" + module_id + "' htmlid='" + module_id + "' class='" + ul_class + " level-" + level + "'>";
            foreach (var item in issues) {
                var subject = item.Subject;
                var icon = "page_word.png";
                if (subject.StartsWith("#FlowChart_")) {
                    subject = subject.Replace("#FlowChart_", "");
                    icon = "chart_organisation.png";
                }
                string html_attr = " module-id='" + item.Module_id + "' module-pid='' module-name='' issue-id='" + item.Id + "' issue-name='" + subject + "'";

                temp += "<li id='issue_" + item.Id + "' class='issue-li'>";
                temp += "   <span class='issue d-inline-block w-100' style='padding-left:19px;'" + html_attr + ">";
                temp += "       <a class='text-decoration-none text-dark d-inline-block w-100' target='issue_content' href='/Platform/ViewIssue?issue_id=" + item.Id + "' title='查看'>";
                temp += "           <img src='/images/xp/" + icon + "'>&nbsp;<label id='lbl_issue_" + item.Id + "' title='需求编号:" + item.Id + "'>" + subject + "</label>";
                temp += "       </a>";
                temp += "   </span>";
                temp += "</li>";
            }
            temp += "</ul>";
        }

        return temp;
    }
}
<table width="100%" height="100%">
    <tr>
        <td valign="top" width="26%">
            <div id="module_div" class="bg-white p-1 border-inset h-100 overflow-scroll" style="overflow-x:hidden !important;">
                @Html.Raw(BuildTree(null, int.Parse(user_id), 0))
            </div>
        </td>
        <td valign="top" class="p-1 pt-0">
            <div class="p-1 bg-white h-100 border-inset">
                <iframe id="issue_content" name="issue_content" src="/Platform/ViewIssue?issue_id=@issue_id" width="100%" height="100%">
                </iframe>
            </div>
        </td>
    </tr>
</table>
<div class="container-fluid mb-0 h-100">
    <div class="row">
        <div class="col-2 p-0 mr-1 pb-2 border-inset bg-white overflow-scroll">
        </div>
        <div class="col-6 p-1 border-inset bg-white">
        </div>&nbsp;
        <div class="col p-1 border-inset bg-white mr-1">
        </div>
    </div>
</div>

<div class="container p-0">
    <div id="module_menu" class="shadow">
        <ul id="ul_module" class="p-0 m-0 d-none">
            <li class="context-item dropdown-item d-cursor" html-type="module" html-action="add_sub_module">添加下级目录</li>
            <li class="context-item dropdown-item d-cursor" html-type="module" html-action="add_issue">添加需求</li>
            <li class="context-item dropdown-item d-cursor" html-type="module" html-action="add_flowchart">添加流程图(Url)</li>
            @if (showEdit) {
                <li><hr class="m-0 dropdown-divider"></li>
                <li class="context-item dropdown-item d-cursor" html-type="module" html-action="edit_module">重命名</li>
                <li><hr class="m-0 dropdown-divider"></li>
                <li class="context-item dropdown-item d-cursor" html-type="module" html-action="move_module_up">上移</li>
                <li class="context-item dropdown-item d-cursor" html-type="module" html-action="move_module_down">下移</li>
                <li><hr class="m-0 dropdown-divider"></li>
                <li class="context-item dropdown-item d-cursor" html-type="module" html-action="up_level">上提一级</li>
                <li class="context-item dropdown-item d-cursor" html-type="module" html-action="down_level">下降一级</li>
                <li><hr class="m-0 dropdown-divider"></li>
                <li class="context-item dropdown-item d-cursor" html-type="module" html-action="move_module_to">移动至</li>
                <li><hr class="m-0 dropdown-divider"></li>
                <li class="context-item dropdown-item d-cursor" html-type="module" html-action="default_module_index">重排序(目录)</li>
                <li class="context-item dropdown-item d-cursor" html-type="module" html-action="default_issue_index">重排序(需求)</li>
                <li><hr class="m-0 dropdown-divider"></li>
                <li class="context-item dropdown-item disabled d-cursor" html-type="module" html-action="disable" title="标记删除">删除<span class="float-end"><i class="bi bi bi-exclamation-octagon"></i></span></li>
            }
        </ul>
        <ul id="ul_issue" class="p-0 m-0 d-none">
            <li class="context-item dropdown-item d-cursor" html-type="issue" html-action="add_issue">添加需求</li>
            <li><hr class="m-0 dropdown-divider"></li>
            <li class="context-item dropdown-item d-cursor" html-type="issue" html-action="open_blank">新窗口打开</li>
            @if (showEdit) {
                <li class="context-item dropdown-item d-cursor" html-type="issue" html-action="edit_issue">修改</li>
                <li><hr class="m-0 dropdown-divider"></li>
                <li class="context-item dropdown-item d-cursor" html-type="issue" html-action="move_issue_up">上移</li>
                <li class="context-item dropdown-item d-cursor" html-type="issue" html-action="move_issue_down">下移</li>
                <li><hr class="m-0 dropdown-divider"></li>
                <li class="context-item dropdown-item d-cursor" html-type="issue" html-action="move_issue_top">置顶</li>
                <li class="context-item dropdown-item d-cursor" html-type="issue" html-action="move_issue_bottom">置底</li>
                <li><hr class="m-0 dropdown-divider"></li>
                <li class="context-item dropdown-item d-cursor" html-type="issue" html-action="move_issue_to">移动至</li>
            }
        </ul>
    </div>
</div>

<input type="hidden" id="txt_module_id" value="@Model.Module_id" />
<input type="hidden" id="txt_issue_id" value="" />
<input type="hidden" id="txt_module_pid" value="" />
<input type="hidden" id="txt_module_name" value="" />
<input type="hidden" id="txt_issue_name" value="" />


<style>
    /* Context menu */
    #module_menu {
        display: none;
        position: absolute;
        border: 1px solid #9f9d9d;
        border-radius: 1px;
        width: 160px;
        background: white;
    }

        #module_menu ul {
            list-style: none;
        }

            #module_menu ul li {
            }
</style>
<dialog id="edit_module_dialog" class="shadow" style="width:400px">
    <div class="row fs-9">
        <div class="col"><input id="edit_module_name" type="text" attr-id="" value="" class="form-control border-inset rounded-0 fs-9 w-100 p-1" autocomplete="off" onfocus="this.select();" placeholder="请输入模块名称..." /></div>
        <div class="col-4" style="padding-top:6px;">
            <a href="#Dialog" class="btn-sm border-1 bg-title text-decoration-none fs-9 rounded-0" onclick="update_module_name()">保存</a>
            <a href="#Dialog" class="btn-sm border-1 bg-title text-decoration-none fs-9 rounded-0" onclick="$('#edit_module_dialog')[0].close();">cancel</a>
        </div>
    </div>
</dialog>
<dialog id="edit_issue_dialog" class="shadow" style="width:600px;height:268px;">
    <div class="row fs-9">
        <div class="col">
            <label for="exampleFormControlInput1" class="form-label">Subject</label>
            <input id="edit_issue_name" type="text" attr-id="" value="" class="form-control border-inset rounded-0 fs-9 w-100 p-1" autocomplete="off" onfocus="this.select();" placeholder="请输入需求标题..." />
        </div>
    </div>
    <div class="row fs-9 mt-3">
        <div class="col">
            <label for="exampleFormControlInput1" class="form-label">Url(FlowChart):</label>
            <input id="edit_issue_description" type="text" attr-id="" value="" class="form-control border-inset rounded-0 fs-9 w-100 p-1" autocomplete="off" placeholder="默认不填..." />
        </div>
    </div>
    <div class="row mt-3">
        <div class="col-3 text-end" style="padding-top:6px;">
            <a href="#Dialog" class="btn-sm border-1 bg-title text-decoration-none fs-9 rounded-0" onclick="update_issue_name()">保存</a>
            <a href="#Dialog" class="btn-sm border-1 bg-title text-decoration-none fs-9 rounded-0" onclick="$('#edit_issue_dialog')[0].close();">cancel</a>
        </div>
    </div>
</dialog>
<dialog id="move_issue_to_dialog" class="shadow" style="width:400px">
    <div class="row fs-9">
        <div class="col"><input id="txt_move_issue_id" type="text" attr-id="" value="" class="form-control border-inset rounded-0 fs-9 w-100 p-1" placeholder="请输入模块编号" autocomplete="off" /></div>
        <div class="col-4" style="padding-top:6px;">
            <a href="#Dialog" class="btn-sm border-1 bg-title text-decoration-none fs-9 rounded-0" onclick="move_to_module('issue')">移动</a>
            <a href="#Dialog" class="btn-sm border-1 bg-title text-decoration-none fs-9 rounded-0" onclick="$('#move_issue_to_dialog')[0].close();">cancel</a>
        </div>
    </div>
</dialog>
<dialog id="move_module_to_dialog" class="shadow" style="width:400px">
    <div class="row fs-9">
        <div class="col"><input id="txt_move_module_id" type="text" attr-id="" value="" class="form-control border-inset rounded-0 fs-9 w-100 p-1" placeholder="请输入模块编号" autocomplete="off" /></div>
        <div class="col-4" style="padding-top:6px;">
            <a href="#Dialog" class="btn-sm border-1 bg-title text-decoration-none fs-9 rounded-0" onclick="move_to_module('module')">移动</a>
            <a href="#Dialog" class="btn-sm border-1 bg-title text-decoration-none fs-9 rounded-0" onclick="$('#move_module_to_dialog')[0].close();">cancel</a>
        </div>
    </div>
</dialog>
<script>
    $(document).ready(function () {
        $("#module_tree span").click(function () {            // li绑定click
            var obj = $(this);
            var module_id = obj.attr("module-id");
            var module_pid = obj.attr("module-pid");
            var expand = "";

            $("#module_tree span").removeClass('active');
            obj.addClass('active');

            sync_value(obj);

            if (obj.hasClass("module")) {
                var ul_module = $('#ul_' + module_id);      // module列表
                var ul_issue = $('#ul_issue_' + module_id); // issue列表
                if (ul_module.hasClass("d-none") || ul_issue.hasClass("d-none")) {  // 显示module列表，显示issue列表
                    var ul = $('#ul_' + module_pid + ' ul');
                    ul.removeClass("d-block");
                    ul.addClass("d-none");

                    ul_module.removeClass("d-none");
                    ul_issue.removeClass("d-none");
                    expand = "ex_false";
                } else {    // 隐藏module列表，隐藏issue列表
                    ul_module.addClass("d-none");
                    ul_issue.addClass("d-none");
                    expand = "ex_true";
                }
            }

            //call_module_ajax(module_id, '', -1, expand);
        });

        var recordCount = @Model.Issues.Count;
        var toggler = document.getElementsByClassName("caret");

        for (var i = 0; i < toggler.length; i++) {
            toggler[i].addEventListener("click", function () {
                $('#ul_' + $(this).attr('htmlId')).toggleClass("d-block");
            });
        }
        //expland_to(2);
    });
    function sync_value(obj) {
        $("#txt_module_id").val(obj.attr("module-id"));         // 隐藏赋值
        $('#txt_module_pid').val(obj.attr("module-pid"));       // 同上
        $('#txt_module_name').val(obj.attr("module-name"));     // 同上，显示用
        $('#txt_issue_id').val(obj.attr("issue-id"));            // 同上，显示用
        $('#txt_issue_name').val(obj.attr("issue-name"));
    }
    function reset_val() {
        $("#txt_module_id").val("");
        $("#txt_issue_id").val("");
        $('#txt_module_pid').val('');
        $('#txt_module_name').val('');
        $('#txt_issue_name').val('');
    }
    $(document).click(function () {
        hide_menu();
    });
    //$(document).contextmenu(function () {
    //    hide_menu();
    //});

    $("#module_tree span").bind('contextmenu', function (e) { // module右键菜单
        var obj = $(this);
        sync_value(obj);

        $("#module_tree span").removeClass('active');
        obj.toggleClass("active");                  // 选中当前节点 current_module

        $('#ul_module').addClass("d-none")
        $('#ul_issue').addClass("d-none")
        if (obj.hasClass("module")) {
            $('#ul_module').removeClass("d-none");
        } else {
            $('#ul_issue').removeClass("d-none");
        }

        var top = e.pageY + 5;                          // 菜单定位
        var left = e.pageX;

        var divHeight = 416;
        if (top + divHeight > screen.availHeight) {
            top = screen.availHeight - divHeight;
        }

        $("#module_menu").show(100).css({
            top: top + "px",
            left: left + "px"
        });

        return false;   // disable default context menu
    });

    // 右键菜单操作
    $("li.context-item").click(function () {
        var module_id = $('#txt_module_id').val().trim();
        var issue_id = $('#txt_issue_id').val().trim();
        var parent_id = $('#txt_module_pid').val().trim();      // current_module 不能为空
        var module_name = $('#txt_module_name').val().trim();
        var issue_name = $('#txt_issue_name').val().trim();
        var current_rowIndex = $('#issue_' + issue_id).index();
        var row_count = $('#issue_' + issue_id).siblings().length;

        var obj = $(this);
        if (module_id == "") {                                  //
            return;
        }
        var action = obj.attr("html-action");                   // 操作类型action_type
        var type = obj.attr("html-type");
        switch (action) {
            case "add_issue":
                $('#issue_content').attr("src", "/Platform/ViewIssue?issue_id=-1&module_id=" + module_id);
                break;
            case "add_flowchart":
                $('#issue_content').attr("src", "/Platform/ViewIssue?issue_id=-1&flowchart=true&module_id=" + module_id);
                break;
            case "open_blank":
                window.open("/Platform/ViewIssue?issue_id=" + issue_id,"_blank");
                break;
            case "add_sub_module":                              // 新增
                call_module_ajax(module_id, '', parent_id, "create_module");
                break
            case "edit_module":                                 // 编辑
                $('#edit_module_name').val(module_name);
                $('#edit_module_name').attr("attr-id", module_id);
                var dlg = document.getElementById("edit_module_dialog");
                dlg.showModal();
                break;
            case "edit_issue":
                $('#edit_issue_name').val(issue_name);
                $('#edit_issue_name').attr("attr-id", issue_id);
                var dlg = document.getElementById("edit_issue_dialog");
                dlg.showModal();
                break;
            case "move_module_up":                              // 上移
                move_module(module_id, parent_id, "up");
                break;
            case "move_module_down":                            // 下移
                move_module(module_id, parent_id, "down");
                break;
            case "disable":                                     // 禁用
                break;
            case "default_module_index":                        // 恢复模块下的默认排序，出现排序错误时使用此功能
                var module_name = $('#txt_module_name').val();
                if (confirm("重排序下级模块，是否继续？[" + module_name + "]")) {
                    call_module_ajax(module_id, '', 9999, "default_module_index");
                }
                break;
            case "default_issue_index":
                var module_name = $('#txt_module_name').val();
                if (confirm("重排序下级需求，是否继续？[" + module_name + "]")) {
                    call_module_ajax(module_id, '', 9999, "default_issue_index");
                }
                break;
            case "disable":
                var module_name = $('#txt_module_name').val();
                if (confirm("当前操作会 禁用 [" + module_name + "] 及其下级模块，是否继续？")) {
                    call_module_ajax(module_id, '', 9999, "disable");
                }
                break;
            case "up_level":                            // 上提一级显示排序
                move_module(module_id, parent_id, "up_level");
                break;
            case "down_level":                          // 下降一级显示排序
                move_module(module_id, parent_id, "down_level");
                break;
            case "move_issue_up":                       // 上移
                if (current_rowIndex > 0) {
                    call_issue_ajax(issue_id, '', module_id, 0, 'move_up','');
                }
                break;
            case "move_issue_down":                     // 下移
                if (current_rowIndex <= row_count - 1) {
                    call_issue_ajax(issue_id, '', module_id, 0, 'move_down','');
                }
                break;
            case "move_issue_top":                      // 置顶
                if (current_rowIndex > 0) {
                    call_issue_ajax(issue_id, '', module_id, 0, 'move_issue_top','');
                }
                break;
            case "move_issue_bottom":                   // 置底
                if (current_rowIndex <= row_count - 1) {
                    call_issue_ajax(issue_id, '', module_id, 0, 'move_issue_bottom','');
                }
                break;
            case "move_module_to":  // 移动模块
                $('#txt_move_module_id').attr("attr-id", module_id);
                var dlg = document.getElementById("move_module_to_dialog");
                dlg.showModal();
                break;
            case "move_issue_to":
                $('#txt_move_issue_id').attr("attr-id", issue_id);
                var dlg = document.getElementById("move_issue_to_dialog");
                dlg.showModal();
                break;
        }
        hide_menu();
    });
    // 更新模块名称
    function update_module_name() {
        var obj = $('#edit_module_name');
        var module_id = obj.attr("attr-id");
        var module_name = obj.val();
        if (module_name == "") {    // 标题不能为空
            obj.focus();
            return;
        }
        call_module_ajax(module_id, module_name, 9999, "update_module_name");   // Ajax更新
        $('#lbl_module_' + module_id).text(module_name);                               // Html界面更新
        $('#edit_module_dialog')[0].close();                                            // 关闭module_edit_dialog()
    }
    // 更新issue名称
    function update_issue_name() {
        var obj = $('#edit_issue_name');
        var issue_id = obj.attr("attr-id");
        var issue_name = obj.val();
        var issue_description = $('#edit_issue_description').val();
        if (issue_name == "") {    // 标题不能为空
            obj.focus();
            return;
        }
        call_issue_ajax(issue_id, issue_name, 9999, 9999, "update_issue_name", issue_description);   // Ajax更新
        $('#edit_issue_description').val('');
        $('#lbl_issue_' + issue_id).text(issue_name);                               // Html界面更新
        $('#edit_issue_dialog')[0].close();                                            // 关闭module_edit_dialog()
    }
    // 移动节点
    function move_module(obj_id, parent_id, action) {
        switch (action) {
            case "up":
                var obj = $('#module_' + obj_id);
                if (obj.index() > 0) {
                    call_module_ajax(obj_id, '', parent_id, action);
                    var prev_node = obj.prev('.module-li');
                    obj.insertBefore(prev_node);
                }
                break;
            case "down":
                var obj = $('#module_' + obj_id);
                if (obj.index() < obj.siblings().length) {
                    call_module_ajax(obj_id, '', parent_id, action);
                    obj.insertAfter(obj.next('.module-li'));
                }
                break;
            case "up_level":
                var obj = $('#module_' + obj_id);
                if (parent_id > 0) {
                    call_module_ajax(obj_id, '', parent_id, action);
                }
                break;
            case "down_level":
                var obj = $('#module_' + obj_id);
                if (obj.index() > 0) {  // 第一个元素不支持调整等级
                    call_module_ajax(obj_id, '', parent_id, action);
                }
                break;
        }
    }

    function hide_menu() {
        $('#module_menu').hide();
    }

    function call_module_ajax(module_id, module_name, parent_id, action) {  // 模块操作
        $.ajax({
            url: '/api/Module',
            method: 'POST',
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            data: '{\"id\": ' + module_id + ',\"name\":\"' + module_name + '\",\"parent_id\":' + parent_id + ',\"action\": \"' + action + '\",\"user_id\":@user_id}',
            complete: function (jqXHR, status) {
                var result = jQuery.parseJSON(jqXHR.responseText);
                switch (result.result) {
                    case "OK":
                        switch (action) {
                            case "default_module_index":
                            case "default_issue_index":
                            case "create_module":
                            case "up_level":
                            case "down_level":
                                window.location.reload();
                                break;
                        }
                        break;
                    case "Ingore":
                        break;
                    default:
                        alert("Request failed: " + result.result);
                        break;
                }
            },
            error: function (jqXHR, textStatus, errorThrown) {
                ;
            }
        });
    }
    // issue操作
    function call_issue_ajax(issue_id, issue_subject, module_id, prev_issue_id, action,issue_description) {
        var obj = {
            "action": action, "module_id": module_id, "prev_issue_id": prev_issue_id, "issue": {
                "id": issue_id, "subject": issue_subject,"description":issue_description, "authorId":@user_id
            }
        };

        $.ajax({
            url: '/api/Issue',
            method: 'POST',
            dataType: 'json',
            contentType: 'application/json; charset=utf-8',
            data: JSON.stringify(obj),
            complete: function (jqXHR, status) {
                var result = jQuery.parseJSON(jqXHR.responseText);
                switch (result.result) {
                    case "OK":
                        switch (action) {
                            case "move_up":
                            case "move_down":
                            case "move_issue_top":
                            case "move_issue_bottom":
                            case "create_issue":
                                window.location.reload();
                                break;
                            case "move_to_module_issue":
                                $('#move_issue_to_dialog')[0].close();
                                alert("操作成功。");
                                window.location.reload();
                                break;
                            case "move_to_module_module":
                                $('#move_module_to_dialog')[0].close();
                                alert("操作成功。");
                                window.location.reload();
                                break;
                        }
                        break;
                    case "Ingore":
                        break;
                    default:
                        alert("Request failed: " + result.result);
                        break;
                }
            },
            error: function (jqXHR, textStatus, errorThrown) {
                ;
            }
        });
    }
    // 移动到模块
    function move_to_module(type) {
        var obj;
        if (type == "module") {
            obj = $('#txt_move_module_id');
        } else if (type == "issue") {
            obj = $('#txt_move_issue_id');
        }
        var issue_id = obj.attr("attr-id");
        if (obj.val() == "") {
            obj.focus();
            return;
        } else if ($.isNumeric(obj.val()) == false) {
            obj.focus();
            return;
        }
        var to_module_id = obj.val();
        call_issue_ajax(issue_id, "", to_module_id, 9999, "move_to_module_" + type, "");
    }    
    function update_html_issue_name(issue_id,issue_name) {
        $('#lbl_issue_' + issue_id).text(issue_name);
        alert(issue_name + "已修改");
    }
</script>